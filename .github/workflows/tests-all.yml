name: Testes de Qualidade ServeRest (Monorepo)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar Dependências do Monorepo
        run: npm install

  backend-api-tests:
    runs-on: ubuntu-latest
    needs: setup-environment
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar Dependências (Cache)
        run: npm install

      - name: Executar Testes de Backend (Cypress API)
        run: npm run api:dev
        env:
          CYPRESS_ADMIN_EMAIL: ${{ secrets.BACKEND_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.BACKEND_ADMIN_PASSWORD }}

      - name: Gerar Relatório HTML Backend
        run: npm run generate:backend-report
        if: always()

      - name: Publicar Relatório Backend
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: relatorio-testes-backend
          path: mochawesome-report/backend-report.html

  frontend-e2e-tests:
    runs-on: ubuntu-latest
    needs: [setup-environment, backend-api-tests]
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Instalar Dependências (Cache)
        run: npm install

      - name: Executar Testes de Frontend (Cypress E2E)
        run: npm run ui:dev
        env:
          CYPRESS_DEFAULT_USER_EMAIL: ${{ secrets.FRONTEND_DEFAULT_USER_EMAIL }}
          CYPRESS_DEFAULT_USER_PASSWORD: ${{ secrets.FRONTEND_DEFAULT_USER_PASSWORD }}

      - name: Gerar Relatório HTML Frontend
        run: npm run generate:frontend-report
        if: always()

      - name: Publicar Relatório Frontend
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: relatorio-testes-frontend
          path: mochawesome-report/frontend-report.html

  performance-tests:
    runs-on: ubuntu-latest
    needs: [setup-environment, backend-api-tests]
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Setup K6
        uses: grafana/setup-k6-action@v1
          
      - name: Instalar Dependências Node.js
        run: npm install

      - name: (Opcional) Executar Setup de Dados K6 (Cypress)
        run: npm run k6:setup
        env:
          CYPRESS_ADMIN_EMAIL: ${{ secrets.BACKEND_ADMIN_EMAIL }}
          CYPRESS_ADMIN_PASSWORD: ${{ secrets.BACKEND_ADMIN_PASSWORD }}

      - name: Executar Testes de Carga (K6)
        uses: grafana/run-k6-action@v1
        with:
          path: performance-tests/scripts/api-load-test.js

        env:
          K6_API_URL: https://serverest.dev
          K6_FRONTEND_URL: https://front.serverest.dev
          if: always()

      - name: Publicar Relatório K6
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: relatorio-teste-carga
          path: performance-tests/test_reports/k6/k6_report.html

  resumo-relatorios:
    runs-on: ubuntu-latest
    needs: [backend-api-tests, frontend-e2e-tests, performance-tests]
    if: always()
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
      - name: Setup Node.js para script de consolidação
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Download Relatório Backend
        uses: actions/download-artifact@v4
        with:
          name: relatorio-testes-backend
          path: consolidated_reports/backend
      - name: Download Relatório Frontend
        uses: actions/download-artifact@v4
        with:
          name: relatorio-testes-frontend
          path: consolidated_reports/frontend
      - name: Download Relatório Teste de Carga
        uses: actions/download-artifact@v4
        with:
          name: relatorio-teste-carga
          path: consolidated_reports/performance
      - name: Gerar Relatório Consolidado
        run: node scripts/generate_consolidated_report.js
      - name: Fazer upload do resumo consolidado
        uses: actions/upload-artifact@v4
        with:
          name: resumo-testes-consolidado
          path: consolidated_reports/**